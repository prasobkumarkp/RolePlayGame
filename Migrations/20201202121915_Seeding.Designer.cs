// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RolePlayGame.Data;

namespace RolePlayGame.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201202121915_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RolePlayGame.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Defeats")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .HasColumnType("int");

                    b.Property<int>("Fights")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Victories")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Defeats = 0,
                            Defence = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            Type = 1,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Defeats = 0,
                            Defence = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            Type = 2,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("RolePlayGame.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("RolePlayGame.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("RolePlayGame.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 212, 16, 234, 217, 52, 111, 101, 221, 74, 114, 228, 30, 100, 214, 247, 193, 198, 0, 48, 216, 10, 247, 48, 127, 80, 88, 85, 126, 118, 236, 69, 245, 153, 142, 193, 206, 210, 47, 137, 58, 21, 117, 105, 72, 10, 247, 22, 138, 3, 223, 252, 93, 44, 166, 198, 196, 97, 94, 139, 106, 146, 126, 251, 148 },
                            PasswordSalt = new byte[] { 110, 30, 123, 128, 36, 2, 233, 6, 4, 144, 233, 199, 123, 188, 136, 66, 218, 206, 188, 25, 179, 159, 166, 40, 89, 198, 204, 17, 190, 126, 43, 245, 105, 246, 220, 145, 115, 205, 182, 238, 13, 83, 58, 158, 177, 175, 22, 66, 105, 167, 171, 64, 198, 187, 47, 156, 11, 23, 40, 161, 126, 221, 136, 178, 88, 91, 167, 54, 245, 70, 229, 82, 212, 192, 164, 64, 63, 94, 26, 211, 134, 35, 104, 11, 6, 65, 148, 137, 91, 121, 236, 185, 128, 185, 178, 156, 43, 54, 36, 171, 14, 172, 165, 118, 18, 109, 153, 110, 188, 187, 130, 195, 243, 23, 39, 59, 132, 44, 1, 157, 128, 157, 85, 44, 119, 122, 138, 246 },
                            Username = "Flora"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 212, 16, 234, 217, 52, 111, 101, 221, 74, 114, 228, 30, 100, 214, 247, 193, 198, 0, 48, 216, 10, 247, 48, 127, 80, 88, 85, 126, 118, 236, 69, 245, 153, 142, 193, 206, 210, 47, 137, 58, 21, 117, 105, 72, 10, 247, 22, 138, 3, 223, 252, 93, 44, 166, 198, 196, 97, 94, 139, 106, 146, 126, 251, 148 },
                            PasswordSalt = new byte[] { 110, 30, 123, 128, 36, 2, 233, 6, 4, 144, 233, 199, 123, 188, 136, 66, 218, 206, 188, 25, 179, 159, 166, 40, 89, 198, 204, 17, 190, 126, 43, 245, 105, 246, 220, 145, 115, 205, 182, 238, 13, 83, 58, 158, 177, 175, 22, 66, 105, 167, 171, 64, 198, 187, 47, 156, 11, 23, 40, 161, 126, 221, 136, 178, 88, 91, 167, 54, 245, 70, 229, 82, 212, 192, 164, 64, 63, 94, 26, 211, 134, 35, 104, 11, 6, 65, 148, 137, 91, 121, 236, 185, 128, 185, 178, 156, 43, 54, 36, 171, 14, 172, 165, 118, 18, 109, 153, 110, 188, 187, 130, 195, 243, 23, 39, 59, 132, 44, 1, 157, 128, 157, 85, 44, 119, 122, 138, 246 },
                            Username = "Clara"
                        });
                });

            modelBuilder.Entity("RolePlayGame.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        });
                });

            modelBuilder.Entity("RolePlayGame.Models.Character", b =>
                {
                    b.HasOne("RolePlayGame.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RolePlayGame.Models.CharacterSkill", b =>
                {
                    b.HasOne("RolePlayGame.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RolePlayGame.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("RolePlayGame.Models.Weapon", b =>
                {
                    b.HasOne("RolePlayGame.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("RolePlayGame.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("RolePlayGame.Models.Character", b =>
                {
                    b.Navigation("CharacterSkills");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("RolePlayGame.Models.Skill", b =>
                {
                    b.Navigation("CharacterSkills");
                });

            modelBuilder.Entity("RolePlayGame.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
